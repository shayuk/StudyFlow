{
  "openapi": "3.1.0",
  "info": {
    "title": "StudyFlow Local API (Draft)",
    "version": "0.1.0",
    "description": "Draft OpenAPI spec for the local backend. Scope is limited to core routes\nimplemented under `server/src/routes/`. This spec will evolve and expand.\n",
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "servers": [
    {
      "url": "https://api.studyflow.local",
      "description": "Local or staging gateway"
    }
  ],
  "security": [
    {
      "bearerAuth": []
    }
  ],
  "tags": [
    {
      "name": "Health",
      "description": "Basic health and identity endpoints"
    },
    {
      "name": "Courses",
      "description": "Course CRUD endpoints scoped by organization"
    },
    {
      "name": "Chat",
      "description": "Chat conversations and messages (SSE capable)"
    },
    {
      "name": "Knowledge",
      "description": "Knowledge intake, documents, and search APIs"
    },
    {
      "name": "Planner",
      "description": "Study session planner endpoints"
    },
    {
      "name": "Progress",
      "description": "Mastery and progress endpoints"
    },
    {
      "name": "Analytics",
      "description": "Analytics and aggregates for courses"
    },
    {
      "name": "Calendar",
      "description": "Calendar adapters and free/busy endpoints"
    }
  ],
  "paths": {
    "/health": {
      "get": {
        "summary": "Health check",
        "tags": [
          "Health"
        ],
        "operationId": "healthCheck",
        "responses": {
          "200": {
            "description": "OK"
          },
          "429": {
            "$ref": "#/components/responses/TooManyRequests"
          }
        }
      }
    },
    "/api/courses": {
      "get": {
        "summary": "List courses in caller's org",
        "tags": [
          "Courses"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "operationId": "listCourses",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "items": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/CourseListItem"
                      }
                    }
                  }
                },
                "examples": {
                  "sample": {
                    "value": {
                      "items": [
                        {
                          "id": "c_123",
                          "name": "Intro to Databases",
                          "code": "DB101",
                          "createdAt": "2025-09-01T10:00:00.000Z"
                        },
                        {
                          "id": "c_124",
                          "name": "Algorithms",
                          "code": "CS201",
                          "createdAt": "2025-09-03T08:30:00.000Z"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "429": {
            "$ref": "#/components/responses/TooManyRequests"
          }
        }
      },
      "post": {
        "summary": "Create a course in caller's org (instructor/admin)",
        "tags": [
          "Courses"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "operationId": "createCourse",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCourseInput"
              },
              "examples": {
                "valid": {
                  "value": {
                    "name": "Intro to Databases",
                    "code": "DB101"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Course"
                },
                "examples": {
                  "created": {
                    "value": {
                      "id": "c_123",
                      "name": "Intro to Databases",
                      "code": "DB101"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ValidationError"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "409": {
            "description": "Conflict"
          },
          "429": {
            "$ref": "#/components/responses/TooManyRequests"
          }
        }
      }
    },
    "/api/courses/{courseId}": {
      "patch": {
        "summary": "Update a course (instructor/admin)",
        "tags": [
          "Courses"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "operationId": "updateCourse",
        "parameters": [
          {
            "name": "courseId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateCourseInput"
              },
              "examples": {
                "rename": {
                  "value": {
                    "name": "Algorithms I"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Course"
                },
                "examples": {
                  "updated": {
                    "value": {
                      "id": "c_124",
                      "name": "Algorithms I",
                      "code": "CS201"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ValidationError"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      },
      "delete": {
        "summary": "Delete a course (instructor/admin)",
        "tags": [
          "Courses"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "operationId": "deleteCourse",
        "parameters": [
          {
            "name": "courseId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "description": "Conflict"
          },
          "429": {
            "$ref": "#/components/responses/TooManyRequests"
          }
        }
      }
    },
    "/api/calendar/freebusy": {
      "get": {
        "summary": "Get demo free/busy windows (cached, no OAuth)",
        "description": "Local-only demo endpoint that returns busy windows for the current user in the given range. Intended for planner integration. Real providers will be added later.",
        "tags": [
          "Calendar"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "operationId": "getFreeBusy",
        "parameters": [
          {
            "name": "from",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "to",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "items": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "start": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "end": {
                            "type": "string",
                            "format": "date-time"
                          }
                        }
                      }
                    }
                  }
                },
                "examples": {
                  "sample": {
                    "value": {
                      "items": [
                        {
                          "start": "2025-09-22T12:00:00.000Z",
                          "end": "2025-09-22T13:00:00.000Z"
                        },
                        {
                          "start": "2025-09-22T16:00:00.000Z",
                          "end": "2025-09-22T17:00:00.000Z"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ValidationError"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "429": {
            "$ref": "#/components/responses/TooManyRequests"
          }
        }
      }
    },
    "/api/chat/start": {
      "post": {
        "summary": "Start a conversation",
        "tags": [
          "Chat"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "operationId": "startConversation",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "botInstanceId": {
                    "type": "string"
                  },
                  "pageId": {
                    "type": "string"
                  },
                  "courseId": {
                    "type": "string"
                  }
                },
                "required": [
                  "botInstanceId"
                ]
              },
              "examples": {
                "minimal": {
                  "value": {
                    "botInstanceId": "bi_001"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConversationOut"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ValidationError"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "429": {
            "$ref": "#/components/responses/TooManyRequests"
          }
        }
      }
    },
    "/api/chat/{conversationId}/message": {
      "post": {
        "summary": "Post a message; optionally SSE stream bot reply",
        "tags": [
          "Chat"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "operationId": "postMessage",
        "parameters": [
          {
            "name": "conversationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "stream",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "1"
              ]
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "content": {
                    "type": "string"
                  }
                },
                "required": [
                  "content"
                ]
              },
              "examples": {
                "text": {
                  "value": {
                    "content": "Help me plan study sessions for next week"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MessagesPair"
                }
              }
            }
          },
          "201": {
            "description": "Created (SSE initiated)"
          },
          "400": {
            "$ref": "#/components/responses/ValidationError"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "429": {
            "$ref": "#/components/responses/TooManyRequests"
          }
        }
      }
    },
    "/api/chat/{conversationId}/messages": {
      "get": {
        "summary": "List messages in a conversation",
        "tags": [
          "Chat"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "operationId": "listMessages",
        "parameters": [
          {
            "name": "conversationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "items": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Message"
                      }
                    }
                  }
                },
                "examples": {
                  "sample": {
                    "value": {
                      "items": [
                        {
                          "id": "m1",
                          "sender": "user",
                          "content": "Hi",
                          "createdAt": "2025-09-20T10:00:00.000Z",
                          "citations": []
                        },
                        {
                          "id": "m2",
                          "sender": "bot",
                          "content": "Hello!",
                          "createdAt": "2025-09-20T10:00:01.000Z",
                          "citations": []
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "429": {
            "$ref": "#/components/responses/TooManyRequests"
          }
        }
      }
    },
    "/api/knowledge/sources": {
      "post": {
        "summary": "Create a knowledge source (instructor/admin)",
        "tags": [
          "Knowledge"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "operationId": "createKnowledgeSource",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "meta": {
                    "type": "string"
                  }
                },
                "required": [
                  "name"
                ]
              },
              "examples": {
                "basic": {
                  "value": {
                    "name": "CS101 Course Pack",
                    "meta": "Semester A"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/KnowledgeSource"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ValidationError"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "429": {
            "$ref": "#/components/responses/TooManyRequests"
          }
        }
      }
    },
    "/api/knowledge/documents": {
      "post": {
        "summary": "Upload a document (multipart)",
        "tags": [
          "Knowledge"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "operationId": "uploadKnowledgeDocument",
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "sourceId": {
                    "type": "string"
                  },
                  "file": {
                    "type": "string",
                    "format": "binary"
                  }
                },
                "required": [
                  "sourceId",
                  "file"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/KnowledgeDocument"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ValidationError"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "429": {
            "$ref": "#/components/responses/TooManyRequests"
          }
        }
      }
    },
    "/api/knowledge/documents/{id}": {
      "get": {
        "summary": "Get uploaded document status and chunk count",
        "tags": [
          "Knowledge"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "operationId": "getKnowledgeDocument",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/KnowledgeDocumentStatus"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "429": {
            "$ref": "#/components/responses/TooManyRequests"
          }
        }
      }
    },
    "/api/knowledge/search": {
      "get": {
        "summary": "Search knowledge (hybrid)",
        "tags": [
          "Knowledge"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "operationId": "searchKnowledge",
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 20
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "items": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/KnowledgeSearchItem"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "429": {
            "$ref": "#/components/responses/TooManyRequests"
          }
        }
      }
    },
    "/api/planner/plan": {
      "post": {
        "summary": "Generate plan sessions from constraints",
        "tags": [
          "Planner"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "operationId": "generatePlan",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "fromDate": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "toDate": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "sessionMinutes": {
                    "type": "integer"
                  },
                  "dailyCap": {
                    "type": "integer"
                  },
                  "preferredStartHour": {
                    "type": "integer",
                    "minimum": 0,
                    "maximum": 23
                  },
                  "preferredEndHour": {
                    "type": "integer",
                    "minimum": 0,
                    "maximum": 23
                  },
                  "topics": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "description": {
                    "type": "string"
                  }
                },
                "required": [
                  "fromDate",
                  "toDate",
                  "sessionMinutes",
                  "dailyCap"
                ]
              },
              "examples": {
                "basic": {
                  "value": {
                    "fromDate": "2025-09-22T00:00:00.000Z",
                    "toDate": "2025-09-28T23:59:59.000Z",
                    "sessionMinutes": 60,
                    "dailyCap": 3,
                    "preferredStartHour": 9,
                    "preferredEndHour": 18,
                    "topics": [
                      "Databases",
                      "Algorithms"
                    ],
                    "description": "Midterm prep"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created with sessions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlanSessionsResponse"
                },
                "examples": {
                  "sample": {
                    "value": {
                      "planId": "p_001",
                      "sessions": [
                        {
                          "start": "2025-09-22T09:00:00.000Z",
                          "end": "2025-09-22T10:00:00.000Z",
                          "topic": "Databases",
                          "description": "Normalization",
                          "status": "scheduled"
                        },
                        {
                          "start": "2025-09-22T11:00:00.000Z",
                          "end": "2025-09-22T12:00:00.000Z",
                          "topic": "Algorithms",
                          "description": null,
                          "status": "scheduled"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ValidationError"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "409": {
            "description": "Conflict (overlaps)"
          },
          "429": {
            "$ref": "#/components/responses/TooManyRequests"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/progress/student": {
      "get": {
        "summary": "Get mastery snapshots for current user",
        "tags": [
          "Progress"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "operationId": "getStudentProgress",
        "parameters": [
          {
            "name": "courseId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "topic",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "items": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/MasterySnapshot"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "429": {
            "$ref": "#/components/responses/TooManyRequests"
          }
        }
      }
    },
    "/api/progress/self-report": {
      "post": {
        "summary": "Upsert a mastery snapshot for current user",
        "tags": [
          "Progress"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "operationId": "upsertSelfReport",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "courseId": {
                    "type": "string"
                  },
                  "topic": {
                    "type": "string"
                  },
                  "score": {
                    "type": "number",
                    "minimum": 0,
                    "maximum": 100
                  }
                },
                "required": [
                  "courseId",
                  "topic",
                  "score"
                ]
              },
              "examples": {
                "sample": {
                  "value": {
                    "courseId": "c_123",
                    "topic": "Normalization",
                    "score": 72
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MasterySnapshot"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ValidationError"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "429": {
            "$ref": "#/components/responses/TooManyRequests"
          }
        }
      }
    },
    "/api/analytics/course/{courseId}": {
      "get": {
        "summary": "Course aggregates (counts + lastActivity)",
        "tags": [
          "Analytics"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "operationId": "getCourseAnalytics",
        "parameters": [
          {
            "name": "courseId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AnalyticsCourse"
                },
                "examples": {
                  "sample": {
                    "value": {
                      "courseId": "c_124",
                      "counts": {
                        "conversations": 5,
                        "messages": 42,
                        "participants": 3
                      },
                      "lastActivity": "2025-09-20T17:45:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "429": {
            "$ref": "#/components/responses/TooManyRequests"
          }
        }
      }
    },
    "/api/me": {
      "get": {
        "summary": "Current authenticated user payload",
        "tags": [
          "Health"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "operationId": "getMe",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "user": {
                      "type": "object",
                      "additionalProperties": true
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "429": {
            "$ref": "#/components/responses/TooManyRequests"
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "responses": {
      "Unauthorized": {
        "description": "Unauthorized",
        "content": {
          "application/problem+json": {
            "schema": {
              "$ref": "#/components/schemas/Problem"
            },
            "examples": {
              "example": {
                "value": {
                  "type": "https://httpstatuses.com/401",
                  "title": "Request Error",
                  "status": 401,
                  "detail": "Missing or invalid bearer token",
                  "instance": "/api/courses"
                }
              }
            }
          }
        }
      },
      "TooManyRequests": {
        "description": "Too Many Requests",
        "content": {
          "application/problem+json": {
            "schema": {
              "$ref": "#/components/schemas/Problem"
            },
            "examples": {
              "example": {
                "value": {
                  "type": "https://httpstatuses.com/429",
                  "title": "Request Error",
                  "status": 429,
                  "detail": "Rate limit exceeded. Try again later.",
                  "instance": "/api/courses"
                }
              }
            }
          }
        }
      },
      "NotFound": {
        "description": "Not Found",
        "content": {
          "application/problem+json": {
            "schema": {
              "$ref": "#/components/schemas/Problem"
            },
            "examples": {
              "example": {
                "value": {
                  "type": "https://httpstatuses.com/404",
                  "title": "Request Error",
                  "status": 404,
                  "detail": "Resource not found",
                  "instance": "/api/courses/unknown"
                }
              }
            }
          }
        }
      },
      "ValidationError": {
        "description": "Validation error",
        "content": {
          "application/problem+json": {
            "schema": {
              "$ref": "#/components/schemas/Problem"
            },
            "examples": {
              "example": {
                "value": {
                  "type": "https://httpstatuses.com/400",
                  "title": "Request Error",
                  "status": 400,
                  "detail": "name is required (string)",
                  "instance": "/api/courses"
                }
              }
            }
          }
        }
      }
    },
    "schemas": {
      "Course": {
        "description": "Course within an organization.",
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "code": {
            "type": [
              "string",
              "null"
            ]
          }
        },
        "required": [
          "id",
          "name"
        ]
      },
      "CourseListItem": {
        "description": "Course item as returned in list endpoints (includes createdAt)",
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "code": {
            "type": [
              "string",
              "null"
            ]
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "id",
          "name",
          "createdAt"
        ]
      },
      "CreateCourseInput": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "code": {
            "type": "string"
          }
        },
        "required": [
          "name"
        ]
      },
      "UpdateCourseInput": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "code": {
            "type": "string"
          }
        }
      },
      "Conversation": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "orgId": {
            "type": "string"
          },
          "botInstanceId": {
            "type": "string"
          },
          "userId": {
            "type": "string"
          },
          "role": {
            "type": "string"
          },
          "pageId": {
            "type": [
              "string",
              "null"
            ]
          },
          "courseId": {
            "type": [
              "string",
              "null"
            ]
          }
        }
      },
      "Message": {
        "description": "Persisted chat message with optional citations.",
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "sender": {
            "type": "string",
            "enum": [
              "user",
              "bot",
              "tool"
            ]
          },
          "content": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "citations": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "docId": {
                  "type": "string"
                },
                "idx": {
                  "type": "integer"
                },
                "snippet": {
                  "type": "string"
                },
                "score": {
                  "type": "number"
                }
              }
            }
          }
        }
      },
      "ConversationOut": {
        "description": "Conversation created by /chat/start.",
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "orgId": {
            "type": "string"
          },
          "botInstanceId": {
            "type": "string"
          },
          "userId": {
            "type": "string"
          },
          "role": {
            "type": "string"
          },
          "pageId": {
            "type": [
              "string",
              "null"
            ]
          },
          "courseId": {
            "type": [
              "string",
              "null"
            ]
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "id",
          "orgId",
          "botInstanceId",
          "userId",
          "role",
          "createdAt"
        ]
      },
      "MessagesPair": {
        "description": "Response of non-streaming chat message: user + bot messages.",
        "type": "object",
        "properties": {
          "user": {
            "$ref": "#/components/schemas/Message"
          },
          "bot": {
            "$ref": "#/components/schemas/Message"
          }
        },
        "required": [
          "user",
          "bot"
        ]
      },
      "KnowledgeSource": {
        "description": "Knowledge source (container for documents).",
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "meta": {
            "type": [
              "string",
              "null"
            ]
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "KnowledgeDocument": {
        "description": "Uploaded knowledge document metadata.",
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "filename": {
            "type": "string"
          },
          "mime": {
            "type": "string"
          },
          "size": {
            "type": "integer"
          },
          "status": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "KnowledgeDocumentStatus": {
        "description": "Detailed status of a specific document and its chunks count.",
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "filename": {
            "type": "string"
          },
          "mime": {
            "type": "string"
          },
          "size": {
            "type": "integer"
          },
          "status": {
            "type": "string"
          },
          "error": {
            "type": [
              "string",
              "null"
            ]
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "chunks": {
            "type": "integer"
          }
        }
      },
      "KnowledgeSearchItem": {
        "description": "Search hit snippet from knowledge base.",
        "type": "object",
        "properties": {
          "docId": {
            "type": "string"
          },
          "idx": {
            "type": "integer"
          },
          "snippet": {
            "type": "string"
          },
          "score": {
            "type": "number"
          }
        }
      },
      "MasterySnapshot": {
        "description": "Mastery snapshot for a user/topic.",
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "orgId": {
            "type": "string"
          },
          "userId": {
            "type": "string"
          },
          "courseId": {
            "type": "string"
          },
          "topic": {
            "type": "string"
          },
          "score": {
            "type": "number"
          },
          "color": {
            "type": "string"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "AnalyticsCourse": {
        "description": "Aggregates for a course (counts and last activity).",
        "type": "object",
        "properties": {
          "courseId": {
            "type": "string"
          },
          "counts": {
            "type": "object",
            "properties": {
              "conversations": {
                "type": "integer"
              },
              "messages": {
                "type": "integer"
              },
              "participants": {
                "type": "integer"
              }
            },
            "required": [
              "conversations",
              "messages",
              "participants"
            ]
          },
          "lastActivity": {
            "type": [
              "string",
              "null"
            ],
            "format": "date-time"
          }
        },
        "required": [
          "courseId",
          "counts"
        ]
      },
      "PlanSessionOut": {
        "description": "Planned study session returned by planner.",
        "type": "object",
        "properties": {
          "start": {
            "type": "string",
            "format": "date-time"
          },
          "end": {
            "type": "string",
            "format": "date-time"
          },
          "topic": {
            "type": [
              "string",
              "null"
            ]
          },
          "description": {
            "type": [
              "string",
              "null"
            ]
          },
          "status": {
            "type": "string"
          }
        }
      },
      "PlanSessionsResponse": {
        "description": "Planner result with plan id and generated sessions.",
        "type": "object",
        "properties": {
          "planId": {
            "type": "string"
          },
          "sessions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PlanSessionOut"
            }
          }
        },
        "required": [
          "planId",
          "sessions"
        ]
      },
      "Problem": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "status": {
            "type": "integer"
          },
          "detail": {
            "type": "string"
          },
          "instance": {
            "type": "string"
          }
        }
      }
    }
  }
}